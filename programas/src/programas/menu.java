/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programas;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import static java.lang.System.exit;
import java.text.DecimalFormat;
import java.util.Scanner;
import javax.swing.JOptionPane;



/**
 *
 * @author jose lopez
 */
public class menu extends javax.swing.JFrame {
 public static String plani[][] = new String[10][11];
    public static String nomb[] = {"jose" ,"laib  "," carlos","daniel","javier","brian","bryan","kike","ricardo","richi"};
    
    public static Scanner lector = new Scanner(System.in);
    public static float dep[] = new float[5]; 
    public static  String ISR[][] = new String[10][3];
    public static  int intcodemp = 0,intsueldobase = 0,intdescuento,intconversueldo,intbonificacion,intpercepciones,intopcion,intcomision,opcion,intsueldoliquido,intdep = 0;
    public static float fltigss,fltsueldoliquido,fltsumatoria,fltisr = 0,fltdeducciones;
    public static double fltvalorigss = 0.0483;
    public static float fltisr1 = (float) 0.03 , fltisr2 = (float) 0.05, fltisr3 = (float) 0.1;
    public static  DecimalFormat df = new DecimalFormat("#.00");
    public static String op,opcion1;
    public menu() {
        initComponents();
        this.setTitle("MENU DE PROGRAMAS");
        this.setLocationRelativeTo(menu.this);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("ALGORITMOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 300, -1));

        jButton2.setText("ORDENAMIENTO Y BUSQUEDA BINARIA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 300, -1));

        jButton3.setText("PLANILLA SIN BASE DE DATOS");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 300, -1));

        jButton4.setText("PLANILLA CON BASE DE DATOS");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 300, -1));

        jButton5.setText("SOLUCION DEL PARCIAL");
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 300, -1));

        jButton6.setText("LISTAS ENLAZADAS");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 300, -1));

        jButton7.setText("PILAS");
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 300, -1));

        jButton8.setText("TORRES DE HANOI");
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 300, -1));

        jButton9.setText("SALIR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, 300, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
     private static int problema4(int A,int B){
        int h;
        h = A * B  ;
        return h;
    }       
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      dispose();
        int  b,A,B,C,W,X;
       int d = 0;
    do{   
        String a,c,f; 
        String mult1,mult2;
        a = JOptionPane.showInputDialog(null,""
                + "INGRESE EL NUMERO DE LA OPCION QUE DESEA:"
                + "\n0.SALIR"
                + "\n1.VER LOS PASOS PARA COCINAR DOS HUEVOS FRITOS"
                + "\n2.VER COMO REALIZAR UNA LLAMADA NACIONAL Y EXTRANJERO"
                + "\n3.VER UNA MULTIPLICAION INGLES\n4.VER MULTIPLICACION DE NUMEROS DIVIDE Y VENCERAS, A LA RUSA"
                + "\n5.VER PASOS PARA UTILIZAR UN CAJERO AUTOMATICO"); 
        b = Integer.parseInt(a);
        switch(b){
            case 0:               
                exit(0);
                break;
            case 1:
                    JOptionPane.showMessageDialog(null,""
                   + "PASOS PARA COCINAR DOS HUEVOS FRITOS\n1.ENCENDER LA ESTUFA O DONDE SE COCINARAN LOS HUEVOS."
                   + "\n2.CALENTAR EL SARTEN HASTA QUE LA MATEQUILLA SE DERRITA."
                   + "\n3.COLOCAR LOS HUEVOS EN EL SARTEN(SIN LOS CASCARONES)Y COLOCAR SAL AL GUSTO."
                   + "\n4.TAPAR EL SARTEN CON SU TAPADERA RESPECTIVA O UNA QUE LO SUSTITUYA."
                   + "\n5.CUANDO ESTEN FRITOS SACAR Y COLOCAR EN UN PLATILLO."
                   + "\n6.DISFRUTAR DE LOS HUEVOS FRITOS.");
                            
           break;                
            case 2: 
             JOptionPane.showMessageDialog(null,""
                   + "PASOS PARA REALIZAR UNA LLAMADA LOCAL O INTERNACIONAL"
                   + "\nLLAMADA NACIONAL\n1.DESBLOQUEAR EL CELULAR."
                   + "\n2.SELECCIONAR EL ICONO DE LA APLICACION LLAMADA."
                   + "\n3.MARCAR EL NUMERO DESEADO."
                   + "\n4.PRESIONAR EL BOTON DE LLAMADA."
                   + "\nLLAMADA INTERNACIONAL."
                   + "\n1.DESBLOQUEAR EL CELULAR."
                   + "\n2.SELECIONAR EL ICONO DE LA APLICACION LLAMADA"
                   + "\n3.MARCAR EL CODIGO DEL PAIS O NUMERO DE AREA SEGUIDO DEL NUMERO TELEFONICO"
                   + "\n4.PRESIONAR EL ICONO DE LA LLAMADA.");
              
                break;
            case 3:
               mult1 = JOptionPane.showInputDialog(null,"PROCESO PARA REALIZAR UNA MULTIPLICAION INGLRESA:\nINGRESE EL PRIMER NUMERO:");
               mult2 = JOptionPane.showInputDialog(null,"INGRESE EL SEGUNDO NUMERO:");
              A = Integer.parseInt(mult1);
              B = Integer.parseInt(mult2);
              C=A*B;
              JOptionPane.showMessageDialog(null,"LA MULTIPLICACION DE:  "+A+" * "+B+"   ES IGUAL A:   "+C);
              break;
            case 4:
               a = JOptionPane.showInputDialog(null,"MULTIPLICACION USANDO DIVIDE Y VENCERAS:\nINGRESE UN NUMERO:");
               A = Integer.parseInt(a);
               f= JOptionPane.showInputDialog(null,"INGRESE UN SEGUNDO NUMERO: ");
               B = Integer.parseInt(f);
               int  h = problema4(A,B);
                JOptionPane.showMessageDialog(null,"LA MULTIPLICACION DE:  "+A+" * "+B+"   ES IGUAL A:   "+h);     

                break;
            case 5:
               
                break;
           
            default:JOptionPane.showMessageDialog(null, "OPCION NO VALIDA");               
        }
            c = JOptionPane.showInputDialog(null,"Â¿DESEA REGRESAR AL MENU PRINCIPAL?\n1.si\n2.no");
            d = Integer.parseInt(c); 
      }while( d != 2 );
            {
               menu v = new menu();
                 v.show(); 
            };
    
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void quickSort(int[] vector, int izquierda, int derecha) {
        int pivote = vector[izquierda];
        int i = izquierda;
        int j = derecha;
        int auxIntercambio;
        while (i < j) {
            while (vector[i] <= pivote && i < j) {
                i++;
            }
            while (vector[j] > pivote) {
                j--;
            }
            if (i < j) {
                auxIntercambio = vector[i];
                vector[i] = vector[j];
                vector[j] = auxIntercambio;
            }
        }
        vector[izquierda] = vector[j];
        vector[j] = pivote;
        if (izquierda < j - 1) {
            quickSort(vector, izquierda, j - 1);
        }
        if (j + 1 < derecha) {
            quickSort(vector, j + 1, derecha);
        }    
    }
    
  public static int busquedaBinaria(int  vector[], int dato){
      //DECLARACION DE VAARIABLES DEL TAMAÃO DEL VECTOR
    int n = vector.length;
    int centro,inf=0,sup=n-1;
    //SI LA VARIABLE INF ES MENOR O IGUAL A SUP ENTRARA AL CILO WHILE
         while(inf<=sup){
        //CENTRO SERA IGUAL A LA SUMA DE SUP Y INF DIVIDIDO 2
                centro=(sup+inf)/2;
         // ENTRA AL CICLO IF SI CENTRO ES IGUAL AL DATO QUE SE BUSCA       
        if(vector[centro]==dato) 
        //SI EL CENTRO ES IGUAL AL VALOR BUSCADO RETORNA CENTRO
        return centro;
        //DE LO CONTRARIO COMPARA SI EL DATO ES MENOS AL VALOR QUE SE LE ASIGNO A CENTRO
        else if(dato < vector [centro] )
                {
        //SI ES MENO A SUP LE ASIGNA EL VALOR DE CENTRO MENOS 1
                sup=centro-1;
                }
        //DE LO CONTRARIO SI NO ES MENOR A INF LE ASIGNA CENTRO MAS 1
        else 
        {
                inf=centro+1;
        }    
     }
   return -1;
    }
   
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       //DECLARACION DE VARIABLE QUE SE USARA COMO CONTADOR
      int I = -1;
      String dat = "";
      String dato = "";
        int opcion,lim,busq,valor;
        //DECLARACION DE VARIABLES PARA MEDIR EL TIEMPO 
        long TInicio, TFin, tiempo; 
        //DECLARACION DE VARIABLE LECTOR PARA LEER VARIABLES EN CONSOLA
            Scanner lector = new Scanner(System.in);
        //DECLARACION DEL VECTOR
        
             int vector[] = new int[15]; 
        //System.out.print("INGRESE LOS DATOS DEL VECTOR\n");
        //INGRESO DE DATOS PARA EL VECTOR
        for(int i = 0 ; i <=14;i++)
        {
            String a = JOptionPane.showInputDialog(null,"INGRESE LOS DATOS:\nVECTOR ["+(i)+"] : ");
            vector[i] = Integer.parseInt(a);
        }
        for (int i = 0 ; i <=14;i++) {
            I++;
                dato += vector[i] + " ";
                if(i%1 == 0)
                    dato += "\n";
            
        }
        JOptionPane.showMessageDialog(null,"LOS DATOS INGRESADOS SON:\n"+dato);
        //ENVIO DE DATOS PARA SER ORDENADOS POR METODO QUICKSHORT
            menu.quickSort(vector, 0,vector.length-1);
        //MUESTRA EL VECTOR ORDENADO Y SU POSICION  
            System.out.println("\nVector Ordenado");
        for (int i = 0 ; i <=14;i++) {
            I++;
                dat += vector[i] + " ";
                if(i%1 == 0)
                    dat += "\n";
            
        }
        JOptionPane.showMessageDialog(null,"LOS DATOS ORDENADOS SON:\n"+dat);
        //DECLARACION DE VARIABLE PARA BUSCAR EL DATO EN EL VECTOR
                int val = 0;
                String posicion;
                posicion = JOptionPane.showInputDialog(null,"INGRESE EL VALOR QUE DESEA BUSCAR:");
                val = Integer.parseInt(posicion);
             TInicio = System.nanoTime(); 
            busq = busquedaBinaria(vector,val);
            if (busq != -1)
              JOptionPane.showMessageDialog(null,"EL DATO ESTA EN LA POSICION:\n"+ busq);   
            
            else
             JOptionPane.showMessageDialog(null,"EL VALOR NO FUE ENCONTRADO:" );
                       
            TFin = System.nanoTime(); 
            tiempo = TFin - TInicio;
            JOptionPane.showMessageDialog(null,"Tiempo de ejecuciÃ³n en milisegundos: :\n"+tiempo);
           
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed
public static int codigodep(int j)
    {
    //CODIGO RANDOM DE LOS DEPARTAMENTOS    
    intdep = (int) (1 + (Math.random()*5));                
    return intdep;
    }
    public static int codigoemp(int j)
    {
     //CODIGO RANDOM DE LOS EMPLEADOS   
    intcodemp = (int) (1 + (Math.random()*200));                
    return intcodemp;
    }
     public static void percepciones()
    {
        //asignacion de las percepciones a una variable
     intpercepciones = intsueldobase + intbonificacion +intcomision;   
    }
     public static void deducciones()
    {
        //asignacion de las deducciones a una variable
        fltdeducciones = fltigss +intdescuento + fltisr;
    }
     public static void sueldoliquido()
    {
      fltsueldoliquido = (intpercepciones-fltdeducciones);
    }
    public static void resultados()
    {
       //IMPRESION DE LA MATRIZ
      System.out.println("______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________");
      System.out.println("No.DEPARTAMENTO\t\tCODIGO\t\tNOMBRE     \t\tSUELDO BASE\t\tBONIFICACION\t\tCOMISIONES\t\tIGSS     \t\t\tDESCUENTOS J.\t\tISR\t\tSUELDO LIQUIDO\t\tPAGA IGSS");
      for(int i = 0; i <10;i++)
      {    
       System.out.println("\t"+plani[i][0]+"\t\t"+ plani[i][1]+"\t\t"+plani[i][2]+"       \t\tQ."+plani[i][3]+"\t\t\tQ."
               + ""+plani[i][4]+"\t\t\tQ."+plani[i][5]+"\t\t\tQ."+plani[i][6]+"     \t\t\tQ."+plani[i][7]+"\t\t\tQ."+plani[i][8]+"  \t\tQ."+plani[i][9]+"\t\t"+plani[i][10]);
       System.out.println("______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________");
      }     
    }
    public static void totaldep()
    {
    for(int i = 0; i<10;i++)
      {
          //en la variabel fltsumatoria se va a guardar lo que tiene la matriz en la posicion 9,convertido a un dato con decimal
      fltsumatoria = Float.parseFloat(plani[i][9]);
      if(plani[i][0].equals("1"))
      {
         dep[0] = dep[0] + fltsumatoria;
      }
      if(plani[i][0].equals("2"))
      {
          dep[1] = dep[1] + fltsumatoria;
      }
       if(plani[i][0].equals("3"))
      {
         dep[2] = dep[2] + fltsumatoria;
      }
      if(plani[i][0].equals("4"))
      {
        dep[3] = dep[3] + fltsumatoria;
      }
      if(plani[i][0].equals("5"))
      {
          dep[4] = dep[4] + fltsumatoria;
      }
      }
     System.out.println("TOTAL DE GASTO POR DEPARTAMENTO: \n");
       for(int i = 0;i<=4;i++)
       {
           System.out.println("DEPATAMENTO "+(i+1)+":    "+dep[i]+"\n");
       }
    }
    public static void isremp()
    {
    for(int i = 0; i <10; i++)
       {
           //en la variable intconversueldo se va a guardar lo que tiene la matriz en la posicion 3,convertido a un dato con entero
       intconversueldo = Integer.parseInt(plani[i][3]);
        if(intconversueldo >= 2500 && intconversueldo<=5000)
        {
          ISR[i][0] = plani[i][2];
          ISR[i][1] = "3%";
          ISR[i][2] = plani[i][8];
        }
        else if(intconversueldo >5000 && intconversueldo <=10000)
        {
          ISR[i][0] = plani[i][2];
          ISR[i][1] = "5%";
          ISR[i][2] = plani[i][8];
        }
        else if(intconversueldo >=  10001 && intconversueldo <= 100000)
        {
            ISR[i][0] = plani[i][2];
            ISR[i][1] = "10%";
            ISR[i][2] = plani[i][8];
        } 
       }
    System.out.println("PORCENTAJE DE ISR POR EMPLEADO: \n");
       for(int i = 0;i<10;i++)
       {
           System.out.println("EMPLEADO "+(i+1)+":"+ISR[i][0]+"           \t\t\tPAGA:"+ISR[i][1]+"     \t\t\t\tEL ISR ES:"+ISR[i][2]);
       }
    }
    public static void menuregresar()
    {
        //menu para ciclo do-while
       opcion1 = JOptionPane.showInputDialog(null,"\nÂ¿DESEA VOLVER A INGRESAR LOS NOMBRES?\n1.si\n2.no");
       opcion = Integer.parseInt(opcion1);
    }
     public static void llenadomatriz()
    {
       
         for(int j = 0;j <10;j++)
                    {
                     //lenado de codigos automaticos por medio de procesos
                    plani[j][0]= Integer.toString(codigodep(intdep));//Llenado de numeros random para el codigo de departamento por medio de un proceso
                    plani[j][1] = Integer.toString(codigoemp(intcodemp));//Llenado de numeros random para el codigo de empleado
                    plani[j][2] = nomb[(int)((Math.random()*9))];//Llenado de nombres random 
                    intsueldobase = (int) (2500 + (Math.random()*10000)); //Llenados de numero
                    plani[j][3] = Integer.toString(intsueldobase);
                    intbonificacion = (int)((Math.random()*500)+1);
                    plani[j][4] = Integer.toString(intbonificacion);
                    intcomision = (int)((Math.random()*500)+ 1);
                    plani[j][5] = Integer.toString(intcomision);
                    //introduccion de la respÃºesta en la variable para ver si calcular el igss
                    op = JOptionPane.showInputDialog(null,"PLANILLA DE SALARIOS\nEL EMPLEADO No."+(j+1)+" PAGA IGSS?\n1.SI\n2.NO");
                    intopcion = Integer.parseInt(op);
                    switch(intopcion)
                    {
                        case 1:
                            fltigss = (float) (((intsueldobase + intcomision )*fltvalorigss));        
                            plani[j][6] = String.valueOf(df.format(fltigss));
                            plani[j][10] = "SI";
                            break;
                        case 2:
                            fltigss = 0;                
                            plani[j][6] = String.valueOf(df.format(fltigss));
                            plani[j][10] = "NO";
                            break;
                 
                    }
                    intdescuento = (int)((Math.random()*500)+1);                   
                    plani[j][7] = Integer.toString(intdescuento);
                    
                    if(intsueldobase >=2500 && intsueldobase <= 5000)
                    {
                    fltisr = (float) ((intsueldobase)*fltisr1);
                    plani[j][8] = String.valueOf(df.format(fltisr));
                    }else if(intsueldobase >5001 && intsueldobase <10000)
                    {
                     fltisr = (float) ((intsueldobase)*fltisr2); 
                     plani[j][8] = String.valueOf(df.format(fltisr));
                    }else if(intsueldobase >=10001 )
                    {
                     fltisr = (float) ((intsueldobase)*fltisr3); 
                     plani[j][8] = String.valueOf(df.format(fltisr));
                    }                                     
                    percepciones();
                    deducciones();
                    sueldoliquido();
                    plani[j][9] = String.valueOf(df.format(fltsueldoliquido));
                     }
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         do{
        //LLENADO DE LA MATRIZ CON RANDOM Y OPERACIONES
            llenadomatriz();
        //SE MUESTRA LA MATRIZ
            resultados();
        //SE OPERAN Y MUESTRAN RESULTADOS POR DEPARTAMENTOS
            totaldep();
        //SE OPERAN Y MUESTRAN RESULTADOS DE IGSS POR 
            isremp();
        //MENU PARA EL CICLO DO-WHILE
            menuregresar();    
       }while(opcion!=2);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    // End of variables declaration//GEN-END:variables
}
