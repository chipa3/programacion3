<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.8" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace min="-2" pref="47" max="-2" attributes="0"/>
              <Group type="103" groupAlignment="0" attributes="0">
                  <Component id="jButton1" alignment="0" min="-2" pref="460" max="-2" attributes="0"/>
                  <Group type="102" alignment="0" attributes="0">
                      <Group type="103" groupAlignment="0" max="-2" attributes="0">
                          <Component id="jScrollPane3" alignment="0" pref="468" max="32767" attributes="0"/>
                          <Component id="jScrollPane1" alignment="0" max="32767" attributes="0"/>
                      </Group>
                      <EmptySpace min="-2" pref="56" max="-2" attributes="0"/>
                      <Component id="jScrollPane2" min="-2" pref="538" max="-2" attributes="0"/>
                  </Group>
              </Group>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace min="-2" pref="25" max="-2" attributes="0"/>
              <Component id="jButton1" min="-2" max="-2" attributes="0"/>
              <EmptySpace min="-2" pref="35" max="-2" attributes="0"/>
              <Group type="103" groupAlignment="0" max="-2" attributes="0">
                  <Component id="jScrollPane1" alignment="0" pref="328" max="32767" attributes="0"/>
                  <Component id="jScrollPane2" alignment="0" max="32767" attributes="0"/>
              </Group>
              <EmptySpace min="-2" pref="26" max="-2" attributes="0"/>
              <Component id="jScrollPane3" min="-2" pref="325" max="-2" attributes="0"/>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JScrollPane" name="jScrollPane3">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextArea3">
          <Properties>
            <Property name="editable" type="boolean" value="false"/>
            <Property name="columns" type="int" value="20"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="package colas;&#xa;&#xa;public class Colas {&#xa;  &#xa;&#x9;private Nodo cabeza=null;//CREACION DE UN NODO CABEZA NULO&#xa;&#x9;private int longitud=0;&#xa;&#x9;private class Nodo {&#xa;&#x9;&#x9;public Libro libro;//CREA UNA VARIABLE DE TIPO LIBRO&#xa;&#x9;&#x9;public Nodo siguiente=null;//CREA UN NODO SIGUIENTE NULO&#xa;        public Nodo(Libro libro)&#xa;        {&#xa;            this.libro=libro;//LA VARIABLE LIBRO TENDRA LOS DATOS DE LA CLASE LIBRO&#xa;        }&#xa;        }&#xa;        public void insertarPrincipio(Libro libro) {&#xa;            //CREA UN NODO QUE TENDRA LO QUE SE INGRESE&#xa;&#x9;&#x9;Nodo nodo=new Nodo(libro);&#xa;                //NODO.SIGUENTES VA A TENER LA DIRECCION DEL PRIMER NODO&#xa;&#x9;&#x9;nodo.siguiente=cabeza;&#xa;                //CABEZA VA A PUNTAR AL NODO&#xa;&#x9;&#x9;cabeza=nodo;&#xa;                //SE IRAN SUMANDO CONFORME SE INGRESEN LOS DATOS&#xa;&#x9;&#x9;longitud++;&#x9;&#xa;&#x9;}&#xa;        public void eliminarUltimo() {&#xa;            //VERIFICA SI LA DIRECCION ESTA VACIA, SI NO ESTA VACIA&#xa;            if (cabeza!= null) {&#xa;                //SI CABEZA.SIGUENTE ES DISTINTO A NULO&#xa;                if (cabeza.siguiente==null) {&#xa;                    //CABEZA SERA NULO&#xa;                    cabeza=null;  &#xa;                    //SE IRAN RESTANDO LOS NODOS&#xa;                    longitud--;&#xa;                } else {&#xa;                    //DE LO CONTRARIO EL PUNTERO SERA IGUAL A CABEZA&#xa;                    Nodo puntero=cabeza;&#xa;                    //MIENTRTAS EL PUNTERO SEA DISITINTO A NULO &#xa;                    while (puntero.siguiente.siguiente!=null) {   &#xa;                        //PUNTYERO SERA IGUAL A LA DIRECCION DEL SIGUIENTE NODO&#xa;                        puntero=puntero.siguiente;&#xa;                    }&#xa;                    puntero.siguiente=null;&#xa;                    longitud--;&#xa;                }&#xa;            }&#xa;        }&#xa;         public String top() {&#xa;             String datos = &quot; &quot;;&#xa;            if (cabeza!= null) {&#xa;                //SI CABEZA.SIGUENTE ES DISTINTO A NULO&#xa;                if (cabeza.siguiente==null) {&#xa;                   datos +=&quot;TITULO : &quot; + cabeza.libro.getTitulo()+ &quot;\u005cn AUTOR : &quot;+cabeza.libro.getAutor()+&quot;\u005cn ISBN : &quot;+cabeza.libro.getIsbn()+&quot;\u005cn&quot;;&#xa;&#x9;&#x9;&#x9;&#xa;                } else {&#xa;                    //DE LO CONTRARIO EL PUNTERO SERA IGUAL A CABEZA&#xa;                    Nodo puntero=cabeza;&#xa;                    //MIENTRTAS EL PUNTERO SEA DISITINTO A NULO &#xa;                    while (puntero.siguiente!=null) {   &#xa;                       &#xa;                        puntero=puntero.siguiente;&#xa;                    }&#xa;                   datos +=&quot;TITULO : &quot; + puntero.libro.getTitulo()+ &quot;\u005cn AUTOR : &quot;+ puntero.libro.getAutor()+&quot;\u005cn ISBN : &quot;+ puntero.libro.getIsbn()+&quot;\u005cn&quot;;&#xa;&#x9;&#x9;&#xa;                }&#xa;            }&#xa;            return(datos);&#xa;        }&#xa;        public String Listar()&#xa;&#x9;{&#xa;&#x9;&#x9;String Dato=&quot; &quot;;&#xa;&#x9;&#x9;Nodo aux= cabeza;//CREA UN NODO QUE TIENE LA POSICION DE CABEZA&#xa;&#x9;&#x9;while (aux!=null)&#xa;&#x9;&#x9;{&#xa;                    //LA VARIABLE DATO SE IRA SUMANDO CON LOS DATOS QUE TIENE LA VARIABLE LIBRO&#xa;&#x9;&#x9;&#x9;Dato +=&quot;&quot; + aux.libro.getTitulo()+ &quot;                          &quot;+aux.libro.getAutor()+&quot;                      &quot;+aux.libro.getIsbn()+&quot;\u005cn&quot;;&#xa;&#x9;&#x9;&#x9;aux=aux.siguiente;&#xa;&#x9;&#x9;}&#xa;&#x9;&#x9;return(Dato);&#xa;&#x9;}&#xa;&#x9;public void push(Libro libro) {&#xa;            //CREA UN NODO QUE TENDRA LO QUE SE LE INGRESE&#xa;&#x9;&#x9;Nodo nodo=new Nodo(libro);&#xa;                //SI CABEZA ES IGUAL A NULO&#xa;&#x9;&#x9;if (cabeza==null) {&#xa;                    //LO INGRESARA EN CABEZA&#xa;&#x9;&#x9;&#x9;cabeza=nodo;&#xa;                        //DE LO CONTRARIO LE ASIGNARA UN PUNTERO A CUAL INGRESAR LOS DATOS&#xa;&#x9;&#x9;} else {&#xa;&#x9;&#x9;&#x9;Nodo puntero=cabeza;&#xa;&#x9;&#x9;&#x9;while (puntero.siguiente!=null) {&#xa;&#x9;&#x9;&#x9;&#x9;puntero=puntero.siguiente;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;&#x9;puntero.siguiente=nodo;&#xa;&#x9;&#x9;}&#xa;&#x9;&#x9;longitud++;&#xa;&#x9;}&#xa;&#x9;&#xa;        public boolean estaVacia() {&#xa;            //VERIFICA SI LA LISTA ESTA VACIA, SI ES ASI RETORNA NULO&#xa;            return cabeza==null;&#xa;        }&#xa;         public String vacia () {&#xa;            if (cabeza == null ) {&#xa;                return (&quot;La cola esta vacia &quot;);&#xa;            } else {&#xa;                return &quot; La cola no esta vacia &quot; ;&#xa;            }&#xa;           &#xa;        }&#xa;          public void Vaciar() {&#xa;          &#xa;            if (cabeza != null) {&#xa;              &#xa;                Nodo primer = cabeza;&#xa;              &#xa;                cabeza = cabeza . siguiente = null ;&#xa;              &#xa;                cabeza = null ;&#xa;               &#xa;                longitud = 0 ;&#xa;            }&#xa;        }&#xa;         public void eliminaPrincipio() {&#xa;            //VERIFICA SI LA DIRECCION ESTA VACIA, SI NO ESTA VACIA&#xa;            if (cabeza!=null){&#xa;                //NODO PRIMER TENDRA LA DIRECCION DE MEMORIA DEL PRIMER NODO&#xa;                Nodo primer = cabeza;&#xa;                //CEL SIGUIENTE NODO TENDRA LA DIRECCION DE NULO&#xa;                cabeza=cabeza.siguiente=null;&#xa;                longitud--;&#xa;                //SE IRAN RESTANDO LOS NODOS&#xa;            }&#xa;        }&#xa;        &#xa;        &#xa;}" containsInvalidXMLChars="true"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JButton" name="jButton1">
      <Properties>
        <Property name="text" type="java.lang.String" value="REGRESAR"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
      </Events>
    </Component>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextArea1">
          <Properties>
            <Property name="editable" type="boolean" value="false"/>
            <Property name="columns" type="int" value="20"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="/*&#xa;NOMNRE: JOSE ESTANISLAO LOPEZ TUBAC&#xa;CARNET: 0901-17-12&#xa;*/&#xa;package colas;&#xa;&#xa;public class Libro {&#xa;        &#xa;&#x9;private String titulo;&#xa;&#x9;private String autor;&#xa;&#x9;private String isbn;&#xa;&#x9;public Libro(String titulo, String autor, String isbn) {&#xa;&#x9;&#x9;this.titulo=titulo;&#xa;&#x9;&#x9;this.autor=autor;&#xa;&#x9;&#x9;this.isbn=isbn;&#xa;&#x9;}&#xa;&#x9;public String getTitulo() {&#xa;&#x9;&#x9;return titulo;&#xa;&#x9;}&#xa;&#x9;public void setTitulo(String titulo) {&#xa;&#x9;&#x9;this.titulo=titulo;&#xa;&#x9;}&#xa;&#x9;public String getAutor() {&#xa;&#x9;&#x9;return autor;&#x9;&#xa;&#x9;}&#xa;&#x9;public void setAutor(String autor) {&#xa;&#x9;&#x9;this.autor=autor;&#xa;         &#xa;&#x9;}&#xa;&#x9;public String getIsbn() {&#xa;&#x9;&#x9;return isbn;&#xa;&#x9;}&#xa;&#x9;public void setIsbn(String isbn) {&#xa;&#x9;&#x9;this.isbn=isbn;&#xa;           &#xa;&#x9;}&#xa;    }&#xa;"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JScrollPane" name="jScrollPane2">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="jTextArea2">
          <Properties>
            <Property name="editable" type="boolean" value="false"/>
            <Property name="columns" type="int" value="20"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="/*&#xa; * To change this license header, choose License Headers in Project Properties.&#xa; * To change this template file, choose Tools | Templates&#xa; * and open the template in the editor.&#xa; */&#xa;package colas;&#xa;&#xa;import static java.lang.System.exit;&#xa;import javax.swing.JOptionPane;&#xa;&#xa;/**&#xa; *&#xa; * @author alumno&#xa; */&#xa;&#xa;import javax.swing.JOptionPane;&#xa;&#xa;public class Inicio {&#xa;    public static String titulo, autor,isbn,opcion,posicion,menuregresar;&#xa;    public static int op,posicionnodo,opcionwhile;&#xa;    public static  Libro libro;&#xa;    public static  Colas milista = new Colas();&#xa;    //funcion que permite ingresar los datos a variables&#xa;    public static void ingreso()&#xa;    {&#xa;    titulo = JOptionPane.showInputDialog(null,&quot;INGRESE EL TITULO DEL LIBRO&quot;);&#xa;    autor = JOptionPane.showInputDialog(null,&quot;NGRESE EL AUTOR DEL LIBRO&quot;);&#xa;    isbn = JOptionPane.showInputDialog(null,&quot;INGRESE EL CODIGO&quot;);&#xa;    libro = new Libro(titulo,autor,isbn);&#xa;    }&#xa;  public static void menup()&#xa;  {&#xa;    opcion = JOptionPane.showInputDialog(null,&quot;MENU DE OPCIONES:\u005cn0.SALIR\u005cn1.INGRESAR DATOS\u005cn2.ELIMINAR DATO\u005cn3.MOSTRAR DATOS\u005cn4.PRIMER DATO\u005cn5.VER SI ESTA VACIA LA COLA\u005cn6.VACIAR COLA&quot;);&#xa;    op = Integer.parseInt(opcion);  &#xa;  }&#xa;  public static void menuregresar()&#xa;  {&#xa;     menuregresar = JOptionPane.showInputDialog(null,&quot;&#xbf;DESEA SALIR DEL PROGRAMA?\u005cn1.SI\u005cn2.NO&quot;);&#xa;    opcionwhile = Integer.parseInt(menuregresar); &#xa;  }&#xa;   public static void main(String[] args)&#xa;   {&#xa;    do{&#xa;        //menu principal de opciones&#xa;    menup();&#xa;    switch(op)&#xa;    {&#xa;        case 0: &#xa;            exit(0);&#xa;            break;&#xa;        case 1:&#xa;            ingreso();&#xa;           milista.insertarPrincipio(libro);&#xa;           JOptionPane.showMessageDialog(null,&quot;LOS DATOS SE GUARDARON EXITOSAMENTE&quot;);&#xa;            break;&#xa;        case 2:&#xa;           milista.eliminarUltimo();&#xa;           JOptionPane.showMessageDialog(null,&quot;EL DATO SE ELMINO CORRECTAMENTE&quot;);&#xa;            break;&#xa;             case 3:&#xa;              JOptionPane.showMessageDialog(null,&quot;TITULO             AUTOR                ISB\u005cn&quot;+milista.Listar());&#xa;            break;&#xa;                &#xa;             case 4:&#xa;                  JOptionPane.showMessageDialog(null,&quot;TITULO             AUTOR                ISB\u005cn&quot;+milista.top());&#xa;            break;&#xa;             case 5:&#xa;                  JOptionPane.showMessageDialog(null,milista.vacia());&#xa;            break;&#xa;             case 6:&#xa;                 milista.Vaciar();&#xa;           JOptionPane.showMessageDialog(null,&quot;SE HA VACIADO LA PILA CORRECTAMENTE&quot;);&#xa;            break;&#xa;    }&#xa;    //menu sobre si desea salir o no del programa&#xa;    menuregresar();&#xa;    }while(opcionwhile != 1);&#xa;   }&#xa;    &#xa;}&#xa;" containsInvalidXMLChars="true"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
